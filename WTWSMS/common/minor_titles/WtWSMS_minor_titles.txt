# Anglo-Saxon

title_scop = {
	dignity = 0.01
	grant_limit = 2
	opinion_effect = 5
	
	monthly_prestige = 0.20
	
	allowed_to_hold = {
		is_adult = yes
		culture = saxon
	}
	allowed_to_grant = {
		culture = saxon
		OR = {
			is_feudal = yes
			is_merchant_republic = yes
		}
		primary_title = {
			OR = {
				tier = duke
				tier = king
				tier = emperor
			}
		}
	}
	
	gain_effect = {
	}
	lose_effect = {
	}

	message = yes
}
title_helm = {
	dignity = 0.10
	grant_limit = 1
	opinion_effect = 10
	monthly_salary = 0.04
	monthly_prestige = 0.50
	
	allowed_to_hold = {
		is_adult = yes
		culture = saxon
	}
	allowed_to_grant = {
		culture = saxon
		OR = {
			is_feudal = yes
			is_merchant_republic = yes
		}
		primary_title = {
			OR = {
				tier = duke
				tier = king
				tier = emperor
			}
		}
	}
	
	gain_effect = {
	}
	lose_effect = {
	}

	message = yes
}
title_folcwine = {
	dignity = 0.01
	grant_limit = 5
	opinion_effect = 5
	monthly_prestige = 0.10
	
	allowed_to_hold = {
		is_adult = yes
		culture = saxon
	}
	allowed_to_grant = {
		culture = saxon
		OR = {
			is_feudal = yes
			is_merchant_republic = yes
		}
		primary_title = {
			OR = {
				tier = duke
				tier = king
				tier = emperor
			}
		}
	}
	
	gain_effect = {
	}
	lose_effect = {
	}

	message = yes
}
title_sigecempa = {
	dignity = 0.20
	grant_limit = 1
	opinion_effect = 15
	monthly_prestige = 0.50
	
	allowed_to_hold = {
		is_adult = yes
		culture = saxon
	}
	allowed_to_grant = {
		culture = saxon
		OR = {
			is_feudal = yes
			is_merchant_republic = yes
		}
		primary_title = {
			OR = {
				tier = duke
				tier = king
				tier = emperor
			}
		}
	}
	
	gain_effect = {
	}
	lose_effect = {
	}

	message = yes
}

title_court_celtic_poet = { # Celtic Poet/Bard
	dignity = 1
	realm_in_name = yes
	grant_limit = 1
	opinion_effect = 30
	
	monthly_salary = 0.02
	monthly_prestige = 0.1
	
	allowed_to_hold = {
		is_adult = yes
		is_ruler = no
		is_female = no
		OR = {
			trait = poet
			learning = 14
		}
	}
	allowed_to_grant = {		
		is_feudal = yes
		OR = {
			culture_group = celtic
			culture = romano_british
			religion = insular
			religion = pelagianism
			religion = celtic_pagan
			religion = celtic_pagan_reformed
		}
	}
	
	gain_effect = {
		add_trait = poet
	}
	lose_effect = {
	}

	message = yes
}

# Scythian Enarei
title_enarei = {
	dignity = 0.050
	grant_limit = 1
	opinion_effect = 10
	monthly_salary = 0.02
	monthly_prestige = 0.75

	revoke_allowed = no
	
	allowed_to_hold = {
		OR = {
			primary_title = { temporary = no }
			NOT = {
				primary_title = {
					always = yes
				}
			}
		}
		trait = enarei
		is_adult = yes
		OR = {
			religion = scythian_pagan_reformed
			religion = scythian_pagan
		}
	}

	
	allowed_to_grant = { 
		OR = {
			religion = scythian_pagan_reformed
			religion = scythian_pagan
		}
	}
	
	gain_effect = {
	}
	lose_effect = {
	}

	message = yes
}


title_primary_shrine_prostitute = {
	dignity = -5
	grant_limit = 1
	show_as_title = no
	revoke_allowed = no
	opinion_effect = 100
	
	monthly_salary = 0.10
	monthly_piety = 0.10

	allow = {
#		OR = {
			society_member_of = society_whoreborites
#			religion = borborites
#		}
	}
	
	allowed_to_hold = {
		is_female = yes
		is_adult = yes
		is_ruler = no
		prisoner = no
	}

	allowed_to_grant = {
		always = no # Same mechanics as Guru: must be spawned by Decision
#		# I'm not sure how to code this. What I want it to do is that members of the Borborite Society cannot appoint their own hooker, and must use the Decision, while 
#		# open Borborites, if the religion is brought back from the brink, can use it normally.
#		OR = {
#			society_member_of = society_whoreborites
#			religion = borborites
#		}
#		is_female = no
#		is_adult = yes
#		is_ruler = yes
#		prisoner = no
#		NOT = {
#			trait = incapable
#			trait = chaste	
#		}
	}
	
	gain_effect = {
		add_trait = lustful
		add_trait = hedonist
		add_trait = whoreborite
		add_trait = seductress
		remove_trait = chaste
		remove_trait = celibate
		remove_trait = temperate
		add_lover = FROM
	}
	lose_effect = {
		remove_trait = hedonist
		remove_trait = seductress
	}
	
	ai_will_do = {
			factor = 1
	}
	
	message = no
}