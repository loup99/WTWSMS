###############################
# Tribal events
#
# WtWSMS_tribal.1 -> WtWSMS_tribal.2
###############################

namespace = WtWSMS_tribal

# Tribal kingdom fractures on death of ruler (ROOT is the dead ruler)
character_event = {
	id = WtWSMS_tribal.1
	
	is_triggered_only = yes # On_actions event
	
	hide_window = yes
	
	only_independent = yes
	
	trigger = {
		government = tribal_government
		tier = KING
		current_heir = { # Weak heir
			OR = {
				AND = { # Non-feminist religions
					is_female = yes
					is_feminist_religion_trigger = no
				}
				NOT = { age = 16 } # Children were weak
				prisoner = yes # A prisoner isn't able to uphold authority
				trait = incapable # An incapable ruler can't do that either
				NOR = {
					prestige = 1000
					martial = 20
				}
			}
		}
		NOT = {
			is_tributary = {
				type = foederati
			}
		}
		primary_title = {
			is_titular = no # The historical titular kingdoms can remain
			NOR = {
				has_law	= tribal_organization_4 # Absolute Tribal Organization
				has_law	= centralization_3 # High Centralization
			}
		}
	}
	
	immediate = {
		current_heir = {
			long_character_event = {
				id = WtWSMS_tribal.2
				days = 1
			}
		}
	}
}

# Weak heir looses kingdom title
long_character_event = {
	id = WtWSMS_tribal.2
	desc = WtWSMS_tribal.2.desc
	picture = GFX_evt_death
	
	is_triggered_only = yes

	immediate = {
		random_demesne_title = {
			limit = {
				tier = KING
				is_titular = no
			}
			save_event_target_as = destroyed_kingdom
		}
		any_vassal = {
			limit = {
				OR = {
					tier = DUKE
					AND = {
						tier = COUNT
						NOT = {
							primary_title = { dejure_liege_title = { NOT = { holder_scope = { character = ROOT } } } } # Not a de jure vassal of any duchy kept
						}
					}
				}
			}
			set_defacto_liege = THIS # Independent
		}
		if = { # Clear up AI borders
			limit = {
				ai = yes
				OR = {
					num_of_duke_titles = 2
					num_of_count_titles	= 2
				}
			}
			event_target:destroyed_kingdom = {
				random_direct_de_jure_vassal_title = {
					limit = {
						#tier = duke #probably not needed
						OR = {
							holder_scope = { # Heir holds the duchy
								character = ROOT
							}
							any_direct_de_jure_vassal_title = {
								holder_scope = { # Heir holds a county in duchy
									character = ROOT
								}
							}
							#defacto_liege_title = { # Heir is liege to this duchy
							#	holder_scope = {
							#		character = ROOT
							#	}
							#}
						}
					}
					activate_title = { title = THIS status = yes }
					set_title_flag = capital_duchy_flag
					save_event_target_as = capital_duchy
				}
			}
			if = {
				limit = {
					NOT = { has_landed_title = event_target:capital_duchy }
				}
				event_target:capital_duchy = {
					grant_title = ROOT
				}
			}
			
			any_demesne_province = { # Keep the provinces that are a part of the capital duchy
				limit = {
					#de_jure_liege_or_above = event_target:destroyed_kingdom # a de jure part of the destroyed kingdom
					de_jure_liege_or_above = event_target:capital_duchy # a part of the capital duchy
				}
				set_province_flag = capital_duchy_county
			}
			any_demesne_province = { # Hand out the provinces that are not a part of the capital duchy or not a de jure part of the destroyed kingdom
				limit = {
					#NOR = {
					#	de_jure_liege_or_above = event_target:destroyed_kingdom # Not a de jure part of the destroyed kingdom
					#	de_jure_liege_or_above = event_target:capital_duchy # Not a part of the capital duchy
					#}
					NOT = {
						has_province_flag = capital_duchy_county
					}
				}
				county = {
					create_character = {
						random_traits = yes
						dynasty = none
						religion = PREV
						culture = PREV
						female = no
						age = 25
						trait = peasant_leader
					}
					new_character = {
						usurp_title_plus_barony_if_unlanded = PREV
						set_defacto_liege = THIS
						set_truce = {
							who = ROOT
							years = 10
						}
						ROOT = {
							set_truce = {
								who = PREV
								years = 10
							}
						}
					}
				}
			}
			any_demesne_title = { # Destroy other duchies
				limit = {
					tier = duke
					NOT = { has_title_flag = capital_duchy_flag }
				}
				destroy_landed_title = THIS
			}
			event_target:capital_duchy = {
				clr_title_flag = capital_duchy_flag
			}
			any_demesne_province = {
				limit = {
					has_province_flag = capital_duchy_county
				}
				clr_province_flag = capital_duchy_county
			}
		}
		event_target:destroyed_kingdom = {
			destroy_landed_title = THIS
		}
		# Log tribal kingdom fracture to see frequency
		log = "The weak heir of the tribal ruler [From.GetTitledName], [Root.GetTitledName] lost their kingdom [destroyed_kingdom.GetName]."
	}
	
	option = {
		name = WtWSMS_tribal.2.a
		prestige = -50
	}
}